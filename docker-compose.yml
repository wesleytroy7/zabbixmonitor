services:
  postgres:
    hostname: postgres
    container_name: postgres
    image: postgres:"$PG_TAG"
    restart: unlees-stopped
    environment:
     - "POSTGRES_DB=$POSTGRES_DB"
     - "POSTGRES_USER=$POSTGRES_USER"
     - "POSTGRES_PASSWORD=$POSTGRES_PASSWORD"
     - "PGPORT:$PGPORT"
    ports:
       - "DB_HOST_ṔORT=$DB_HOST_ṔORT"
    healthcheck: # teste o postgres
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 5s
      timeout: 5s
      retries: 5  
    volumes:
     - pgdata:/var/lib/postgresql/data
    networks:
     - zabbix-net


  zabbix-server:
    container_name: zabbix-server
    image: zabbix/zabbix-server-pgsql:$VERSION_TAG
    restart: always # sempre reinicia 
    environment:
     - "DB_SERVER_PORT=$DB_SERVER_PORT"
     - "DB_SERVER_HOST=$DB_SERVER_HOST" 
     - "POSTGRES_DB=$POSTGRES_DB"
     - "POSTGRES_USER=POSTGRES_USER"
     - "POSTGRES_PASSWORD=$POSTGRES_PASSWORD"
     - "ZBX_STARTREPORTWRITERS=$ZBX_STARTREPORTWRITERS"
     - "ZBX_WEBSERVICEURL=$BX_WEBSERVICEURL"
    depends_on:
      postgres:
        condition: service_healthy # o zabbix-server so inicia se pg ativo
    volumes:
     - ./zabbix/usr/lib/zabbix/alertscripts:/usr/lib/zabbix/alertscripts:ro 
     - ./zabbix/usr/lib/zabbix/externalscripts:/usr/lib/zabbix/externalscripts:ro
     - ./zabbix/var/lib/zabbix/modules:/var/lib/zabbix/modules:ro
     - ./zabbix/var/lib/zabbix/enc:/var/lib/zabbix/enc:ro
     - ./zabbix/var/lib/zabbix/ssh_keys:/var/lib/zabbix/ssh_keys:ro
     - ./zabbix/var/lib/zabbix/ssl/certs:/var/lib/zabbix/ssl/certs:ro
    networks:
     - zabbix-net

    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:10051/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
   zabbix-net:
    driver: bridge

volumes:
   pg_data:   